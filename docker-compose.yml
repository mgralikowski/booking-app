version: '3'
services:
    app:
        container_name: app
        build:
            context: .
            dockerfile: Dockerfile
        restart: unless-stopped
        expose:
            - "9000"
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network
    webserver:
        image: nginx:alpine
        container_name: webserver
        networks:
            - app-network
        ports:
            - "8989:80"
            - "443:443"
        restart: on-failure
        volumes:
            - .:/var/www
            - ./nginx/:/etc/nginx/conf.d/
    database:
        image: mariadb
        container_name: database
        environment:
            MYSQL_DATABASE: laravel
            MYSQL_ROOT_PASSWORD: password
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        networks:
            - app-network
        ports:
            - "3306:3306"
        restart: on-failure
        volumes:
            - dbdata:/var/lib/mysql/
    pma:
        image: phpmyadmin:5.2
        container_name: pma
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=${DB_HOST}
            - PMA_USER=${DB_USERNAME}
            - PMA_PASSWORD=${DB_PASSWORD}
            - PMA_PORT=${DB_PORT}
        networks:
            - app-network
        depends_on:
            - database
        ports:
            - "8888:80"
#    redis:
#        image: redis:alpine
#        container_name: app-redis
#        command: redis-server --appendonly yes --requirepass secret
#        volumes:
#            - ./data/redis:/data
#        ports:
#            - "6379:6379"
#        networks:
#            - app-network
#    npm:
#        image: node:20-alpine
#        container_name: npm
#        volumes:
#            - ./:/var/www
#        working_dir: /var/www
#        ports:
#            - "3000:3000"
#            - "3001:3001"
##            - "5173:5173"
#        entrypoint: ['npm']
#        networks:
#            - app-network

networks:
    app-network:
        driver: bridge

volumes:
    dbdata:
        driver: local
